= help document =
https://help.ubuntu.com/

= 主机地址：美国洛杉矶*加利福利亚州 =
https://launchpad.net/ubuntu/+archivemirrors
== 配置源 /etc/apt/source.list ==

#############################################################
################### OFFICIAL UBUNTU REPOS ###################
#############################################################

###### Ubuntu Main Repos
deb http://us.archive.ubuntu.com/ubuntu/ maverick main restricted universe multiverse 
deb-src http://us.archive.ubuntu.com/ubuntu/ maverick main restricted universe multiverse 

###### Ubuntu Update Repos
deb http://us.archive.ubuntu.com/ubuntu/ maverick-security main restricted universe multiverse 
deb http://us.archive.ubuntu.com/ubuntu/ maverick-updates main restricted universe multiverse 
deb http://us.archive.ubuntu.com/ubuntu/ maverick-proposed main restricted universe multiverse 
deb http://us.archive.ubuntu.com/ubuntu/ maverick-backports main restricted universe multiverse 
deb-src http://us.archive.ubuntu.com/ubuntu/ maverick-security main restricted universe multiverse 
deb-src http://us.archive.ubuntu.com/ubuntu/ maverick-updates main restricted universe multiverse 
deb-src http://us.archive.ubuntu.com/ubuntu/ maverick-proposed main restricted universe multiverse 
deb-src http://us.archive.ubuntu.com/ubuntu/ maverick-backports main restricted universe multiverse 

###### Ubuntu Partner Repo
deb http://archive.canonical.com/ubuntu maverick partner
deb-src http://archive.canonical.com/ubuntu maverick partner

= aptitude =
>> apt-get install aptitude

= Launchpad PPA (Personal Package Archive) =
>> sudo apt-get install python-software-properties

= locale =
/etc/default/locale
/etc/environment
>> locale
>> locale -a
>> locale-gen zh_CN.UTF-8

= timezone =
>> cp /usr/share/zoneinfo/Asia/Shanghai /etc/localtime

= ntpdate time =
" /etc/ntp.conf
>> apt-get install ntpdate
>> apt-get install ntp
>> ntpdate ntp.ubuntu.com
" 写入硬件
>> hwclock --systohc

= manpages-dev =
>> apt-get install manpages-dev

= add user =
/etc/sudoers
        #Create a sudo entry for the wheel group in /etc/sudoers like this:
        ## Allows people in group wheel to run all commands
        %wheel  ALL=(ALL)       ALL

        #Create a sudo entry for the user account in question and give then 
        ##complete access. Again, you create the entry in /etc/sudoers like this:
        ## Allows just user "username" to run all commands as root
        username    ALL=(ALL)    ALL
>> id cfddream
>> sudo useradd -m -s /bin/bash -g admin -d /home/cfd cfd
>> sudo passwd cfd
" remove gdm login username
>> sudo usermod -u 999 cfd
>> sudo -i -u cfddream

= update & upgrade =
>> sudo apt-get update
>> sudo apt-get upgrade --show-upgraded

= web dev =
>> sudo apt-get install -y build-essential
>> sudo apt-get install -y gcc g++ automake autoconf make
>> sudo apt-get install -y re2c wget cron bzip2 libzip-dev file
>> sudo apt-get install -y rcconf flex vim nano
>> sudo apt-get install -y bison m4 gawk less
>> sudo apt-get install -y make  cpp binutils
>> sudo apt-get install -y unzip tar
>> sudo apt-get install -y bzip2 unrar p7zip
>> sudo apt-get install -y libncurses5 libncursesw5-dev libncurses5-dev
>> sudo apt-get install -y libtool
>> sudo apt-get install -y libevent-dev
>> sudo apt-get install -y libpcre3 libpcre3-dev libpcrecpp0 libperl-dev
>> sudo apt-get install -y libssl-dev zlibc openssl libsasl2-dev
>> sudo apt-get install -y libxml2 libxml2-dev
>> sudo apt-get install -y libltdl3-dev libmcrypt-dev
>> sudo apt-get install -y zlib1g zlib1g-dev
>> sudo apt-get install -y libbz2-1.0 libbz2-dev
>> sudo apt-get install -y libglib2.0-0 libglib2.0-dev
>> sudo apt-get install -y libreadline5 libreadline5-dev
>> sudo apt-get install -y curl libcurl3
>> sudo apt-get install -y libcurl4-openssl-dev
>> sudo apt-get install -y libcurl4-gnutls-dev
>> sudo apt-get install -y libpng3 libpng-dev libpng12-0 libpng12-dev
>> sudo apt-get install -y libfreetype6 libfreetype6-dev
>> sudo apt-get install -y libjpeg62 libjpeg62-dev libjpeg-dev
>> sudo apt-get install -y libxslt1-dev libxslt-dev libpspell-dev
>> sudo apt-get install -y libmhash2 libmhash-dev 
>> sudo apt-get install -y libpq-dev libpq5 gettext
>> sudo apt-get install -y libxpm-dev libt1-dev
>> sudo apt-get install -y libtiff4-dev libwmf-dev libx11-dev libxt-dev
>> sudo apt-get install -y libxext-dev liblcms1-dev libexif-dev libjasper-dev
>> sudo apt-get install -y libgdbm-dev
>> sudo apt-get install -y libmysqlclient15-dev
>> sudo apt-get install -y htop
>> sudo apt-get install -y ntp ntpdate
>> sudo apt-get install -y bash-completion
>> sudo apt-get install -y psmisc

" lnmp dir
" /home/cfddream/lnmp
= nginx =
>> wget -c http://nginx.org/download/nginx-0.8.54.tar.gz
>> tar zxvf nginx-*
>> ./configure --prefix=/opt/nginx --user=nginx --group=nginx --with-http_ssl_module --with-http_stub_status_module --with-http_flv_module --with-http_gzip_static_module --with-http_realip_module
>> sudo adduser --system --no-create-home --disabled-login --disabled-password --group nginx
>> su -
>> wget https://library.linode.com/web-servers/nginx/installation/reference/init-deb.sh nginx-init-deb.sh
>> mv nginx-init-deb.sh /etc/init.d/nginx
>> chmod +x /etc/init.d/nginx
>> /usr/sbin/update-rc.d -f nginx defaults
>> /etc/init.d/nginx start

// https://launchpad.net/nginx
>> sudo add-apt-repository ppa:nginx/stable

= mysql =
>> sudo aptitude install mysql-server mysql-client
>> mysql_secure_installation
" /etc/mysql/my.cnf
        key_buffer = 16K
        max_allowed_packet = 1M
        thread_stack = 64K
        table_cache = 4
        sort_buffer = 64K
        net_buffer_length = 2K
" reset password
">> dpkg-reconfigure mysql-server-5.0

= php =
>> sudo aptitude install php5-cgi php5-mysql php5-fpm php5-dev php5-curl php5-gd php5-idn php-pear php5-imagick php5-imap php5-mcrypt php5-memcache php5-mhash php5-ming php5-pspell php5-recode php5-snmp php5-sqlite php5-tidy php5-xmlrpc php5-xsl
