# -------------------------------------------------------------------
# Links
# -------------------------------------------------------------------
# https://github.com/thoughtbot/dotfiles
# https://github.com/tejr/dotfiles/blob/master/tmux/tmux.conf
# https://gist.github.com/MohamedAlaa/2961058
# https://github.com/square/maximum-awesome/blob/master/tmux.conf
# http://www.tylercipriani.com/2013/09/12/important-lines-in-my-tmux.html
# https://gist.github.com/henrik/1967800
# https://github.com/seebi/tmux-colors-solarized
# https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard
# https://wiki.archlinux.org/index.php/Tmux

# Hierarchy:
#  Server
#  ㄴSession
#    ㄴWindow
#      ㄴPane

# Options:
# - Session options (set-option [-g])
# - Window options (set-window-option [-g])

# -------------------------------------------------------------------
# Session options
# -------------------------------------------------------------------

# Change bind key to ctrl-a
unbind-key c-b
set-option -g prefix c-a

# Fix native clipboard copy/paste on macOS
# See:
#   https://github.com/tmux/tmux/issues/543
#   https://github.com/ChrisJohnsen/tmux-MacOSX-pasteboard/issues/53
set -g default-shell $SHELL
if-shell 'test "$(uname -s)" = Darwin' 'set -g default-command "reattach-to-user-namespace -l ${SHELL}"'

# Index starts from 1
set-option -g base-index 1

# Renumber windows when a window is closed
set-option -g renumber-windows on

# History
set-option -g history-limit 102400

# Repeat time limit (ms)
set-option -g repeat-time 500

# 256-color terminal
set-option -g default-terminal "screen-256color"

# Add truecolor support (tmux info | grep Tc)
set-option -ga terminal-overrides ",xterm-256color:Tc"

# Key binding in the status line (bind-key :)
set-option -g status-keys emacs

# Mouse
set-option -g mouse on

# -------------------------------------------------------------------
# Window options
# -------------------------------------------------------------------
# Copy-mode
set-window-option -g mode-keys vi

# -------------------------------------------------------------------
# Key bindings
# -------------------------------------------------------------------
# prefix c
bind-key c new-window -c "#{pane_current_path}"

# prefix ctrl-a
bind-key c-a last-window

# prefix a
bind-key a send-prefix

# prefix |
bind-key | split-window -h -c "#{pane_current_path}"

# prefix -
bind-key - split-window -c "#{pane_current_path}"

# Moving windows
bind-key -r > swap-window -t :+
bind-key -r < swap-window -t :-

# Back and forth
bind-key bspace previous-window
bind-key space next-window
bind-key / next-layout # Overridden

# Pane-movement
#bind-key h select-pane -L
#bind-key l select-pane -R
#bind-key j select-pane -D
#bind-key k select-pane -U
bind-key tab select-pane -t :.+
bind-key btab select-pane -t :.-

# Smart pane switching with awareness of Vim splits.
# See: https://github.com/christoomey/vim-tmux-navigator
is_vim="ps -o state= -o comm= -t '#{pane_tty}' \
    | grep -iqE '^[^TXZ ]+ +(\\S+\\/)?g?(view|n?vim?x?)(diff)?$'"
bind-key -n C-h if-shell "$is_vim" "send-keys C-h"  "select-pane -L"
bind-key -n C-j if-shell "$is_vim" "send-keys C-j"  "select-pane -D"
bind-key -n C-k if-shell "$is_vim" "send-keys C-k"  "select-pane -U"
bind-key -n C-l if-shell "$is_vim" "send-keys C-l"  "select-pane -R"
bind-key -n C-\ if-shell "$is_vim" "send-keys C-\\" "select-pane -l"

# Synchronize panes
bind-key * set-window-option synchronize-pane

# Reload ~/.tmux.conf
bind-key R source-file ~/.tmux.conf \; display-message "Reloaded!"

# copy-mode
bind-key -t vi-copy 'v' begin-selection
# https://superuser.com/questions/1114694/on-macos-sierra-beta-5-using-iterm-2-and-tmux-i-have-lost-the-ability-to-copy-p
#bind-key -t vi-copy 'y' copy-pipe "pbcopy"
bind-key -t vi-copy 'y' copy-selection

# Capture pane and open in Vim
bind-key C-c run 'tmux capture-pane -S -102400 -p > /tmp/tmux-capture.txt'\;\
             new-window "view /tmp/tmux-capture.txt"
bind-key M-c run "screencapture -l$(osascript -e 'tell app \"iTerm\" to id of window 1') -x -o -P /tmp/$(date +%Y%m%d-%H%M%S).png"

# Clear scrollback buffer
bind-key C-l send-keys C-l \; clear-history

# -------------------------------------------------------------------
# Decoration (256-color)
# -------------------------------------------------------------------
set-option -g status-justify left
set-option -g status-left '#[bg=colour72] #[bg=colour237] #[bg=colour236] #[bg=colour235]#[fg=colour185] #h #[bg=colour236] '
set-option -g status-left-length 16
set-option -g status-bg colour237
set-option -g status-right '#[bg=colour236] #[bg=colour235]#[fg=colour185] #(date "+%a %b %d %H:%M") #[bg=colour236] #[bg=colour237] #[bg=colour72] '
set-option -g status-interval 60

set-option -g pane-active-border-fg colour240
set-option -g pane-border-fg colour238

set-window-option -g window-status-format '#[bg=colour238]#[fg=colour107] #I #[bg=colour239]#[fg=colour110] #[bg=colour240]#W#[bg=colour239]#[fg=colour195]#F#[bg=colour238] '
set-window-option -g window-status-current-format '#[bg=colour236]#[fg=colour215] #I #[bg=colour235]#[fg=colour167] #[bg=colour234]#W#[bg=colour235]#[fg=colour195]#F#[bg=colour236] '

# set-window-option -g window-style 'bg=colour238'
# set-window-option -g window-active-style 'bg=colour237'

# -------------------------------------------------------------------
# Here be dragons!
# -------------------------------------------------------------------
# Backslash bind-key
if-shell "test $USER = jg" \
  "unbind C-a; set-option -g prefix \\ ; bind-key ] send-prefix; bind-key p paste-buffer; bind-key \\ last-window"

# Bind-key switch
bind-key F9  set-option -g prefix C-a   \;\
             bind-key a send-prefix     \;\
             bind-key p previous-window \;\
             bind-key C-a last-window
bind-key F10 set-option -g prefix "\\"  \;\
             bind-key ] send-prefix     \;\
             bind-key p paste-buffer    \;\
             bind-key "\\" last-window
